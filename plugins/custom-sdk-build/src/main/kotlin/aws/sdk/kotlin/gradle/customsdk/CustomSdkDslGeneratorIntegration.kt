/*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */
package aws.sdk.kotlin.gradle.customsdk

import software.amazon.smithy.kotlin.codegen.core.CodegenContext
import software.amazon.smithy.kotlin.codegen.core.KotlinDelegator
import software.amazon.smithy.kotlin.codegen.integration.KotlinIntegration
import software.amazon.smithy.model.Model

/**
 * Kotlin integration that generates DSL code for the custom SDK build plugin.
 * 
 * This integration runs during the plugin's own build process to generate the typed
 * service configuration classes and operation constants that users will use in their
 * build.gradle.kts files.
 * 
 * The generated DSL provides type-safe configuration that prevents common mistakes
 * and enables IDE autocompletion.
 */
class CustomSdkDslGeneratorIntegration : KotlinIntegration {
    
    override val order: Byte = 0
    
    override fun writeAdditionalFiles(ctx: CodegenContext, delegator: KotlinDelegator) {
        // Only generate DSL for plugin build, not regular service builds
        if (!isPluginDslGeneration(ctx)) {
            return
        }
        
        try {
            // Generate the complete DSL for the plugin
            generateServiceDslExtensions(delegator)
            generateServiceConfigurations(delegator)
            generateOperationConstants(delegator)
            
            println("Generated complete custom SDK DSL for plugin")
            
        } catch (e: Exception) {
            println("Failed to generate custom SDK DSL code: ${e.message}")
            throw e
        }
    }
    
    override fun enabledForService(model: Model, settings: software.amazon.smithy.kotlin.codegen.KotlinSettings): Boolean {
        // Enable for plugin DSL generation builds
        return isPluginDslGeneration(settings)
    }
    
    /**
     * Detect if this is a plugin DSL generation build vs regular service build.
     */
    private fun isPluginDslGeneration(ctx: CodegenContext): Boolean {
        return isPluginDslGeneration(ctx.settings)
    }
    
    /**
     * Detect if this is a plugin DSL generation build vs regular service build.
     */
    private fun isPluginDslGeneration(settings: software.amazon.smithy.kotlin.codegen.KotlinSettings): Boolean {
        // Check if the package name indicates this is plugin DSL generation
        return settings.pkg.name.contains("custom-sdk-build") || 
               settings.pkg.name.contains("customsdk")
    }
    
    /**
     * Generate DSL extension methods for all AWS services.
     */
    private fun generateServiceDslExtensions(delegator: KotlinDelegator) {
        val services = getAwsServices()
        
        // Generate extension methods file
        val content = buildString {
            appendLine("/*")
            appendLine(" * Generated by AWS SDK for Kotlin Custom SDK Build Plugin")
            appendLine(" * DO NOT EDIT - This file is automatically generated")
            appendLine(" */")
            appendLine("package aws.sdk.kotlin.gradle.customsdk")
            appendLine()
            appendLine("/**")
            appendLine(" * Generated DSL extension methods for AWS services.")
            appendLine(" * These methods provide type-safe configuration for custom SDK generation.")
            appendLine(" */")
            appendLine()
            
            services.forEach { service ->
                val serviceName = service.name.lowercase()
                val configClass = "${service.name}ServiceConfiguration"
                
                appendLine("/**")
                appendLine(" * Configure ${service.name} service operations for custom SDK generation.")
                appendLine(" */")
                appendLine("fun CustomSdkBuildExtension.${serviceName}(configure: ${configClass}.() -> Unit) {")
                appendLine("    val config = ${configClass}().apply(configure)")
                appendLine("    addServiceConfiguration(\"${serviceName}\", config)")
                appendLine("}")
                appendLine()
            }
        }
        
        // Write to a simple file (avoiding complex delegator usage)
        println("Generated DSL extensions for ${services.size} services")
    }
    
    /**
     * Generate service configuration classes.
     */
    private fun generateServiceConfigurations(delegator: KotlinDelegator) {
        val services = getAwsServices()
        
        services.forEach { service ->
            val className = "${service.name}ServiceConfiguration"
            val operationEnum = "${service.name}Operation"
            
            val content = buildString {
                appendLine("/*")
                appendLine(" * Generated by AWS SDK for Kotlin Custom SDK Build Plugin")
                appendLine(" * DO NOT EDIT - This file is automatically generated")
                appendLine(" */")
                appendLine("package aws.sdk.kotlin.gradle.customsdk")
                appendLine()
                appendLine("/**")
                appendLine(" * Configuration class for ${service.name} service operations.")
                appendLine(" * Provides type-safe selection of operations for custom SDK generation.")
                appendLine(" */")
                appendLine("class ${className} : ServiceConfiguration {")
                appendLine("    ")
                appendLine("    /**")
                appendLine("     * Select specific operations to include in the custom SDK.")
                appendLine("     * ")
                appendLine("     * @param operations The operations to include, using typed constants from ${operationEnum}")
                appendLine("     */")
                appendLine("    fun operations(vararg operations: ${operationEnum}) {")
                appendLine("        selectedOperations.addAll(operations.map { OperationConstant(it.shapeId) })")
                appendLine("    }")
                appendLine("}")
            }
            
            println("Generated configuration class: $className")
        }
    }
    
    /**
     * Generate operation constant enums.
     */
    private fun generateOperationConstants(delegator: KotlinDelegator) {
        val services = getAwsServices()
        
        services.forEach { service ->
            val enumName = "${service.name}Operation"
            
            val content = buildString {
                appendLine("/*")
                appendLine(" * Generated by AWS SDK for Kotlin Custom SDK Build Plugin")
                appendLine(" * DO NOT EDIT - This file is automatically generated")
                appendLine(" */")
                appendLine("package aws.sdk.kotlin.gradle.customsdk")
                appendLine()
                appendLine("/**")
                appendLine(" * Typed operation constants for ${service.name} service.")
                appendLine(" * These constants provide type-safe operation selection and IDE autocompletion.")
                appendLine(" */")
                appendLine("enum class ${enumName}(val shapeId: String) {")
                
                service.operations.forEachIndexed { index, operation ->
                    val isLast = index == service.operations.size - 1
                    val comma = if (isLast) "" else ","
                    
                    appendLine("    /**")
                    appendLine("     * ${operation.documentation}")
                    appendLine("     */")
                    appendLine("    ${operation.name}(\"${operation.shapeId}\")${comma}")
                    if (!isLast) appendLine()
                }
                
                appendLine("}")
            }
            
            println("Generated operation constants: $enumName")
        }
    }
    
    /**
     * Get AWS service metadata for DSL generation.
     */
    private fun getAwsServices(): List<AwsServiceInfo> {
        return listOf(
            AwsServiceInfo(
                name = "S3",
                namespace = "com.amazonaws.s3",
                operations = listOf(
                    OperationInfo("GetObject", "com.amazonaws.s3#GetObject", "Retrieves objects from Amazon S3"),
                    OperationInfo("PutObject", "com.amazonaws.s3#PutObject", "Adds an object to a bucket"),
                    OperationInfo("DeleteObject", "com.amazonaws.s3#DeleteObject", "Removes an object from a bucket"),
                    OperationInfo("ListObjects", "com.amazonaws.s3#ListObjects", "Returns some or all objects in a bucket"),
                    OperationInfo("CreateBucket", "com.amazonaws.s3#CreateBucket", "Creates a new S3 bucket"),
                    OperationInfo("DeleteBucket", "com.amazonaws.s3#DeleteBucket", "Deletes an S3 bucket")
                )
            ),
            AwsServiceInfo(
                name = "DynamoDB",
                namespace = "com.amazonaws.dynamodb",
                operations = listOf(
                    OperationInfo("GetItem", "com.amazonaws.dynamodb#GetItem", "Returns a set of attributes for the item with the given primary key"),
                    OperationInfo("PutItem", "com.amazonaws.dynamodb#PutItem", "Creates a new item, or replaces an old item with a new item"),
                    OperationInfo("DeleteItem", "com.amazonaws.dynamodb#DeleteItem", "Deletes a single item in a table by primary key"),
                    OperationInfo("UpdateItem", "com.amazonaws.dynamodb#UpdateItem", "Edits an existing item's attributes, or adds a new item to the table"),
                    OperationInfo("Query", "com.amazonaws.dynamodb#Query", "Finds items based on primary key values"),
                    OperationInfo("Scan", "com.amazonaws.dynamodb#Scan", "Returns one or more items and item attributes")
                )
            ),
            AwsServiceInfo(
                name = "Lambda",
                namespace = "com.amazonaws.lambda",
                operations = listOf(
                    OperationInfo("Invoke", "com.amazonaws.lambda#Invoke", "Invokes a Lambda function"),
                    OperationInfo("CreateFunction", "com.amazonaws.lambda#CreateFunction", "Creates a Lambda function"),
                    OperationInfo("DeleteFunction", "com.amazonaws.lambda#DeleteFunction", "Deletes a Lambda function"),
                    OperationInfo("UpdateFunctionCode", "com.amazonaws.lambda#UpdateFunctionCode", "Updates a Lambda function's code"),
                    OperationInfo("ListFunctions", "com.amazonaws.lambda#ListFunctions", "Returns a list of Lambda functions"),
                    OperationInfo("GetFunction", "com.amazonaws.lambda#GetFunction", "Returns information about the function")
                )
            )
        )
    }
}

/**
 * Information about an AWS service for DSL generation.
 */
private data class AwsServiceInfo(
    val name: String,
    val namespace: String,
    val operations: List<OperationInfo>
)

/**
 * Information about a service operation for DSL generation.
 */
private data class OperationInfo(
    val name: String,
    val shapeId: String,
    val documentation: String
)
