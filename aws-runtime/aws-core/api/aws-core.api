public class aws/sdk/kotlin/runtime/AwsErrorMetadata : aws/smithy/kotlin/runtime/ServiceErrorMetadata {
	public fun <init> ()V
}

public class aws/sdk/kotlin/runtime/AwsServiceException : aws/smithy/kotlin/runtime/ServiceException {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
	public fun getSdkErrorMetadata ()Laws/sdk/kotlin/runtime/AwsErrorMetadata;
	public synthetic fun getSdkErrorMetadata ()Laws/smithy/kotlin/runtime/ErrorMetadata;
	public synthetic fun getSdkErrorMetadata ()Laws/smithy/kotlin/runtime/ServiceErrorMetadata;
}

public class aws/sdk/kotlin/runtime/ClientException : aws/smithy/kotlin/runtime/ClientException {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
}

public class aws/sdk/kotlin/runtime/ConfigurationException : aws/sdk/kotlin/runtime/ClientException {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
	public fun <init> (Ljava/lang/Throwable;)V
}

public abstract interface annotation class aws/sdk/kotlin/runtime/InternalSdkApi : java/lang/annotation/Annotation {
}

public final class aws/sdk/kotlin/runtime/client/AwsClientOption {
	public static final field INSTANCE Laws/sdk/kotlin/runtime/client/AwsClientOption;
	public final fun getRegion ()Laws/smithy/kotlin/runtime/util/AttributeKey;
}

public abstract interface class aws/sdk/kotlin/runtime/client/AwsSdkClientConfig : aws/smithy/kotlin/runtime/client/SdkClientConfig {
	public abstract fun getRegion ()Ljava/lang/String;
	public abstract fun getUseDualStack ()Z
	public abstract fun getUseFips ()Z
}

public abstract interface class aws/sdk/kotlin/runtime/client/AwsSdkClientConfig$Builder {
	public abstract fun getRegion ()Ljava/lang/String;
	public abstract fun getUseDualStack ()Ljava/lang/Boolean;
	public abstract fun getUseFips ()Ljava/lang/Boolean;
	public abstract fun setRegion (Ljava/lang/String;)V
	public abstract fun setUseDualStack (Ljava/lang/Boolean;)V
	public abstract fun setUseFips (Ljava/lang/Boolean;)V
}

