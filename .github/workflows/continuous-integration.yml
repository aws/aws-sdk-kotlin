name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  BUILDER_VERSION: v0.8.22
  BUILDER_SOURCE: releases
  # host owned by CRT team to host aws-crt-builder releases. Contact their on-call with any issues
  BUILDER_HOST: https://d19elf31gohf1l.cloudfront.net
  PACKAGE_NAME: aws-sdk-kotlin
  RUN: ${{ github.run_id }}-${{ github.run_number }}

jobs:
#  linux-compat:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout sources
#        uses: actions/checkout@v2
#      - uses: actions/cache@v2
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#      - name: Build and Test ${{ env.PACKAGE_NAME }}
#        run: |
#          python3 -c "from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder.pyz')"
#          chmod a+x builder.pyz
#          echo "kotlinWarningsAsErrors=true" >> $GITHUB_WORKSPACE/local.properties
#          ./builder.pyz build -p ${{ env.PACKAGE_NAME }}
#
#  macos-compat:
#    runs-on: macos-latest
#    steps:
#      - name: Checkout sources
#        uses: actions/checkout@v2
#      - uses: actions/cache@v2
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#      - name: Build and Test ${{ env.PACKAGE_NAME }}
#        run: |
#          python3 -c "from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder.pyz')"
#          chmod a+x builder.pyz
#          echo "kotlinWarningsAsErrors=true" >> $GITHUB_WORKSPACE/local.properties
#          ./builder.pyz build -p ${{ env.PACKAGE_NAME }}

  windows-compat:
    runs-on: windows-2019
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'
      - name: Build and Test ${{ env.PACKAGE_NAME }}
        run: |
          python3 -c "from urllib.request import urlretrieve; urlretrieve('${{ env.BUILDER_HOST }}/${{ env.BUILDER_SOURCE }}/${{ env.BUILDER_VERSION }}/builder.pyz?run=${{ env.RUN }}', 'builder.pyz')"
          java -version
          python3 builder.pyz build -p ${{ env.PACKAGE_NAME }}
      - name: Archive Files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: memory-dump
          path: ${{ github.workspace }}/aws-runtime/http-client-engine-crt/*.log
